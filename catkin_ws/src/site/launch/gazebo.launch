<launch>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>

  <!-- Start gazebo and load the world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!-- Spawn the site -->
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
  <arg name="gpu" default="false"/>
  <arg name="organize_cloud" default="false"/>
  <param
    name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find site)/urdf/site.urdf' organize_cloud:=$(arg organize_cloud) gpu:=$(arg gpu)" />
  <node
    pkg="robot_state_publisher"
    type="robot_state_publisher"
    name="robot_state_publisher">
  <param
    name="publish_frequency"
    type="double"
    value="30.0" />
  </node>
  <node
    pkg="gazebo_ros"
    type="spawn_model"
    name="spawn_model"
    args="-urdf -param /robot_description -model site"/>
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

  <!-- output the point_cloud data -->
  <node
    name="point_cloud_write1"
    pkg="site"
    type="point_cloud_write1"
    args="-d $(find site)/src/point_cloud_write1.cpp" />
  <node
    name="point_cloud_write2"
    pkg="site"
    type="point_cloud_write2"
    args="-d $(find site)/src/point_cloud_write2.cpp" />

  <!-- visualize the point_cloud data via cloud_viewer 
  <node
    name="cloud_viewer"
    pkg="site"
    type="cloud_viewer"
    args="-d $(find site)/src/cloud_viewer.cpp" />-->

  <!-- output the image -->
  <node
    name="image_output"
    pkg="site"
    type="image_output"
    args="-d $(find site)/src/image_output.cpp" />

  <!-- Rviz -->
  <arg name="rviz" default="true"/>
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="$(anon rviz)" respawn="false" output="screen" args="-d $(find site)/rviz/example.rviz" />

</launch>